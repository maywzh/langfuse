services:
  langfuse-web:
    build:
      dockerfile: ./web/Dockerfile
      context: .
      args:
        - NEXT_PUBLIC_LANGFUSE_CLOUD_REGION=${NEXT_PUBLIC_LANGFUSE_CLOUD_REGION}
    ports:
      - "3000:3000"
    env_file: ./.env.dev_maywzh
    environment: &langfuse-web-env
      # # Auth & Security
      # NEXTAUTH_URL: ${NEXTAUTH_URL}
      # NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      # SALT: ${SALT}
      # ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      # ADMIN_API_KEY: ${ADMIN_API_KEY}

      # # Database Connections
      # DATABASE_URL: ${DATABASE_URL}
      # DIRECT_URL: ${DIRECT_URL}
      
      # # ClickHouse Configuration
      # CLICKHOUSE_URL: ${CLICKHOUSE_URL}
      # CLICKHOUSE_DB: ${CLICKHOUSE_DB}
      # CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      # CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      # CLICKHOUSE_CLUSTER_ENABLED: ${CLICKHOUSE_CLUSTER_ENABLED:-false}
      # CLICKHOUSE_MIGRATION_SSL: ${CLICKHOUSE_MIGRATION_SSL:-false}
      # CLICKHOUSE_MIGRATION_URL: ${CLICKHOUSE_MIGRATION_URL}

      # # Redis Configuration
      # REDIS_HOST: ${REDIS_HOST}
      # REDIS_PORT: ${REDIS_PORT}
      # REDIS_AUTH: ${REDIS_AUTH}
      
      # # S3 Event Upload Configuration
      # LANGFUSE_S3_EVENT_UPLOAD_BUCKET: ${LANGFUSE_S3_EVENT_UPLOAD_BUCKET}
      # LANGFUSE_S3_EVENT_UPLOAD_REGION: ${LANGFUSE_S3_EVENT_UPLOAD_REGION}
      # LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: ${LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID}
      # LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: ${LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY}
      # LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: ${LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT}
      # LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: ${LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE}
      # LANGFUSE_S3_EVENT_UPLOAD_PREFIX: ${LANGFUSE_S3_EVENT_UPLOAD_PREFIX}

      # # UI Configuration
      # LANGFUSE_UI_DOCUMENTATION_HREF: ${LANGFUSE_UI_DOCUMENTATION_HREF}
      # LANGFUSE_UI_SUPPORT_HREF: ${LANGFUSE_UI_SUPPORT_HREF}
      # LANGFUSE_UI_FEEDBACK_HREF: ${LANGFUSE_UI_FEEDBACK_HREF}
      # LANGFUSE_UI_DEFAULT_MODEL_ADAPTER: ${LANGFUSE_UI_DEFAULT_MODEL_ADAPTER}
      # LANGFUSE_UI_DEFAULT_BASE_URL_OPENAI: ${LANGFUSE_UI_DEFAULT_BASE_URL_OPENAI}

      # # Enterprise Features
      # LANGFUSE_EE_LICENSE_KEY: ${LANGFUSE_EE_LICENSE_KEY}
      # LANGFUSE_ALLOWED_ORGANIZATION_CREATORS: ${LANGFUSE_ALLOWED_ORGANIZATION_CREATORS}
      # LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES: ${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-true}

      # Other Settings
      SENTRY_SUPPRESS_GLOBAL_ERROR_HANDLER_FILE_WARNING: 1
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/public/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    platform: "linux/amd64"

  langfuse-worker:
    build:
      dockerfile: ./worker/Dockerfile
      context: .
      args:
        - NEXT_PUBLIC_LANGFUSE_CLOUD_REGION=${NEXT_PUBLIC_LANGFUSE_CLOUD_REGION}
    ports:
      - "3030:3030"
    env_file: ./.env.dev_maywzh
    environment:
      <<: *langfuse-web-env
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3030/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    platform: "linux/amd64"


